# Make sure to copy files before calling docker-compose to avoid permission issues

version: "3"

services:
  aq_mysql:
    container_name: aq_mysql_container
    image: mysql:latest
    user: "1000:1000"
    volumes:
     - ./volumes/mysql:/var/lib/mysql
    ports: 
    - "3312:3306"
    restart: always
    environment:
     - MYSQL_ROOT_PASSWORD=root
    networks:
      aq_network:
        ipv4_address: 172.24.0.2

  aq_grafana:
    container_name: aq_grafana_container
    image: grafana/grafana:6.5.0
    ports:
      - 3000:3000
    user: "1000:1000"
    depends_on:
    - aq_mysql
    volumes:
      - ./volumes/grafana:/var/lib/grafana
    networks:
      aq_network:
        ipv4_address: 172.24.0.3

  aq_java:
    container_name: aq_java_container
    build: .
    depends_on:
    - aq_mysql
    ports:
    - "8080:8080"
    networks:
      aq_network:
        ipv4_address: 172.24.0.4

  # react:
  #   container_name: aq_react_container
  #   stdin_open: true
  #   tty: true
  #   build: ../AirQuality-Front-End/
  #   depends_on:
  #   - aq_java
  #   - grafana
  #   environment:
  #     - PORT=3001
  #   ports:
  #     - "3001:3001"
  #   networks:
  #     aq_network:
  #       ipv4_address: 172.24.0.5

  aq_nginx:
   container_name: aq_nginx_container
   restart: always
   build: ../AirQuality-Front-End/
   ports:
     - "88:88"
   networks:
      aq_network:
        ipv4_address: 172.24.0.6

networks:
  aq_network:
    ipam:
      config:
        - subnet: 172.24.0.0/24